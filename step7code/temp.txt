public int allocate(List <IRNode> allocatedIRList, String operand, HashSet<String> outSet) { 
		int fileSize = this.regFile.getSize(); 
		boolean isFree = false; 
		int allocateIndex = 0; 
		for(int i = 0; i < fileSize; i++) { // if a register is available sets allocate index
			if(regFile.getRegister(i).getFree() & !isFree) {  //isFree
				allocateIndex = i; 
				isFree = true; 
			} 
		}

		if (!isFree){ // if all the registers are taken check outset to spill registers
			for(Register regfromFile : regFile) { 
				String op = regfromFile.getRegValue(); 
				if(!outSet.contains(op) & !isFree){
					//int index = regFile.indexOf(regfromFile);  // register index to spill 
					isFree = true; 
					allocateIndex = regFile.indexOf(regfromFile);  // register index to spill 
				}
			}
		}
	
		String name = "$T" + allocateIndex; 
		Register reg = new Register(name); 
		reg.setRegValue(operand); 
		reg.setDirty(true); 
		reg.setFree(false);
		regFile.set(allocateIndex, reg);
	 
	 	return allocateIndex;
	}